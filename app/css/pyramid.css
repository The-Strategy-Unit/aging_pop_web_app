#pyramid {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#pyramid .pyramid-content {
  display: grid;
  width: 1200px;
  max-width: 95vw;
}

#pyramid .titles-container {
  grid-area: titles;
}

#pyramid .controls-container {
  grid-area: controls;
}

#pyramid .graphic-container {
  grid-area: graphic;
  position: relative;
  align-self: center;
  width: 100%;
}

#pyramid .slider-container {
  position: relative;
  grid-area: slider;
  display: flex;
  align-items: stretch;
  justify-content: left;
  padding-right: 2em;
}

#pyramid .slider-container .slider-labels {
  visibility: hidden;
  width: 4em;
}

@supports (container-type: size) {
  #pyramid .slider-container .slider-labels {
    visibility: visible;
    position: relative;
    container-type: size;
    pointer-events: none;
    --defaultThumbHeight: 16px;
    padding: calc(var(--defaultThumbHeight)/2) 0 calc(var(--defaultThumbHeight)/2) 0; /*Half thumb gap at top and bottom*/
  }
}


#pyramid .slider-container .slider-labels .label {
  position: absolute;
  left: 3px;
  top: 0;
  font-size: 0.8em;
}

#pyramid .data-container {
  grid-area: data;
  position: relative;
}

#pyramid .links {
  display: flex;
}

#pyramid .links p {
  margin: 0;
}

#pyramid .titles-container h4:empty::before {
  content:"";
  display: inline-block;
}

#pyramid input[type="range"] {
  appearance: slider-vertical;
  width: 20px;
  margin-top: 0;
  margin-bottom: 0;
}

input[type="range"]::-webkit-slider-runnable-track {
  background-color: transparent;
}

/*---------------------------------------------------------------------------*/
/* table age structure */
/*---------------------------------------------------------------------------*/
#pyramid table {
  table-layout: fixed;
  width: 80%;
  border-collapse: collapse;
  margin-bottom: 1em;
  font-size: 0.9rem;
}

/* set column widths */
#pyramid thead th:nth-child(1) {
  width: 25%;
}

#pyramid thead th:nth-child(2) {
  width: 25%;
}

#pyramid thead th:nth-child(3) {
  width: 20%;
}

#pyramid :where(th, td) {
  padding: 4px;
}

#pyramid th {
  font-weight: normal;
}

#pyramid thead th {
  border-bottom: 1px solid black;
  border-top: 1px solid black;
  color: #000000;
  font-weight: 500;
}

#pyramid tfoot :where(th, td) {
  border-top: 1px solid black;
}

#pyramid td {
  text-align: right;
}

#pyramid th {
  text-align: left;
}

/* right align column headers for cols 2 & 3 */
#pyramid thead th:nth-child(2) {
  text-align: right;
}

#pyramid thead th:nth-child(3) {
  text-align: right;
}

/*---------------------------------------------------------------------------*/
/* variant assumptions text */
/*---------------------------------------------------------------------------*/
#pyramid dl {
  display: flex;
  flex-direction: column;
  row-gap: 0.5em;
  font-size: 0.9rem;
  margin-top: 0px;
  margin-bottom: 1em;
}

#pyramid dt {
  font-weight: normal;
  margin: 0px 0px 2px 0px;
}

#pyramid .caption {
  font-weight: normal;
}

#pyramid dd {
  display: inline;
  margin-inline-start: 0;
  /* border-radius: 8px;
  background: #e0e0e0;
  border: 4px solid #e0e0e0; */
  color: #111314 !important;
  height: 100%;
  font-weight: 500;
}

#pyramid dl > div:first-child :where(dt, dd) {
  display: inline;
}

#pyramid dd span {
  display: inline;
  margin-right: 0.5em;

}

/*---------------------------------------------------------------------------*/
/* dependency ratios text */
/*---------------------------------------------------------------------------*/
/* a space between selectors is a descendant combinator */
#pyramid .dependency-ratios {
  display: flex;
  flex-direction: column;
  margin-top: 0px;
  margin-bottom: 1em;
  font-size: 0.9rem;
}

#pyramid .dependency-ratios .dr-space{
  margin-bottom: 8px;
}

/* greater than sign is a child combinator */
/* a combinator  explains the relationship between selectors */
#pyramid .dependency-ratios > div {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 400px;
}

#pyramid .dependency-ratios p {
  margin: 0px 0px 4px 0px;
}

#pyramid .dependency-ratios .dr-no {
  color: #111314 !important;
  height: 100%;
  font-weight: 500;
}

#pyramid .dependency-ratios .dr-def { 
  color: #666666;
  margin-bottom: 2px;
}

#pyramid .mini-graphic {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

#pyramid .play-pause-container {
  position: absolute;
  width: 100%;
  bottom: 10%;
}

#pyramid .play-pause-container button {
  all: unset;
  cursor: pointer;
  position: absolute;
  right: 5%;
  bottom: 5%;
}

#pyramid .play-pause-container svg {
  min-width: 48px;
  min-height: 48px;
}

#pyramid .play-pause-container :focus-visible svg {
  outline: 2px solid black;
}

#pyramid .play-pause-container button g {
  fill: #2d74b6;
}

#pyramid .play-pause-container .pause-button {
  display: none;
}

#pyramid.animating .play-pause-container  .play-button {
  display: none;
}

#pyramid.animating .play-pause-container .pause-button {
  display: unset;
}

#pyramid .graphic-container {
  --width: 600px;
  --height: 600px;
  --margin-top: 25px;
  --margin-right: 20px;
  --margin-bottom: 50px;
  --margin-left: 20px;
  --x-mid-width: 35px;
  --tick-height: 8px;
  --tick-gap: 4px;
}

#pyramid .graphic-container .main-graphic svg {
  width: 100%;
  height: 100%;
}

#pyramid .age-structure {
  transform: translate(var(--margin-left), var(--margin-top));
  font-weight: bold;
}

#pyramid .age-structure :first-child {
  font-size: 0.8em;
}

#pyramid .age-structure .big-year {
  transform: translateY(15px);
  font-size: 2.2em;
}

#pyramid .axes {
  font-size: 0.8em;
}

#pyramid .x-axes {
  transform: translateY(calc(var(--height) - var(--margin-bottom)));
}

#pyramid .y-axis {
  font-weight: bold;
}

#pyramid .axis-title {
  transform: translateY(var(--margin-bottom));
}

#pyramid .left {
  transform: translateX(var(--margin-left));
}

#pyramid .right {
  --full-width: calc(var(--width) - (var(--margin-left) + var(--margin-right) + var(--x-mid-width)));
  --half-width: calc(var(--full-width) / 2);
  --translateX: calc(var(--margin-left) + var(--half-width) + var(--x-mid-width));
  transform: translateX(var(--translateX));
}

#pyramid .ticks line {
  stroke-width: var(--tick-width);
  stroke: var(--tick-col);
}

#pyramid .ticks text {
  transform: translateY(calc(var(--tick-height) + var(--tick-gap)));
}

#pyramid .data rect {
  stroke: white;
  stroke-width: 0.05px;
  cursor: pointer;
}

#pyramid .data .males :not(min) {
  fill: var(--male-col);
}

#pyramid.v0 .data .males :not(min) {
  fill: var(--male-col-dark);
}

#pyramid .data .females :not(min) {
  fill: var(--female-col);
}

#pyramid.v0 .data .females :not(min) {
  fill: var(--female-col-dark);
}

#pyramid .data :is(.males, .females) rect.min {
  fill: white;
  fill-opacity: 0.25;
  pointer-events: none;
  stroke-opacity: 0;
}

#pyramid .data .chosen :is(.males, .females) rect:not(min) {
  fill: black;
}

#pyramid .grid-line {
  stroke: white;
  stroke-width: 0.25px;
  pointer-events: none;
}

#pyramid .yob-labels {
  pointer-events: none;
}

#pyramid .large-yob-label {
  font-weight: bold;
  fill: black;
  stroke: white;
  stroke-width: 0.25px;
  display: none;
}

#pyramid.v0 .large-yob-label {
  fill: white;
  stroke: black;
}

#pyramid .chosen .large-yob-label {
  display: unset;
}

#pyramid .small-yob-label {
  font-size: 0.6em;
  fill: white;
  stroke: black;
  stroke-width: 0.1px;
}

#pyramid .yob-labels > :first-child .small-yob-label,
#pyramid .chosen .small-yob-label,
#pyramid .chosen + * .small-yob-label,
#pyramid .chosen + * + * .small-yob-label,
#pyramid .chosen + * + * + * .small-yob-label,
#pyramid .chosen + * + * + * + * .small-yob-label,
#pyramid :has(+ .chosen) .small-yob-label {
  opacity: 0;
}

#pyramid .ref-year polyline {
  stroke: black;
  stroke-width: 2px;
  fill: none;
}

#pyramid .mini-graphic {
  --width: 80px;
  --height: 100px;
  --margin-top: 5px;
  --margin-right: 5px;
  --margin-bottom: 20px;
  --margin-left: 5px;
  --x-mid-width: 5px;
}

#pyramid .mini-graphic svg {
  --scaled-width: 10%;
  position: absolute;
  width: var(--scaled-width);
  height: calc((var(--height) / var(--width)) * var(--scaled-width));
  top: 14%;
  left: 5%;
}

#pyramid .mini-graphic .left {
  transform: translateX(var(--margin-left));
}

#pyramid .mini-graphic .right {
  --full-width: calc(var(--width) - (var(--margin-left) + var(--margin-right) + var(--x-mid-width)));
  --half-width: calc(var(--full-width) / 2);
  --translateX: calc(var(--margin-left) + var(--half-width) + var(--x-mid-width));
  transform: translateX(var(--translateX));
}

#pyramid .mini-graphic polyline {
  stroke: black;
  stroke-width: 1px;
  fill: none;
}

#pyramid .mini-graphic .ref-year {
  font-weight: bold;
  stroke: white;
  stroke-width: 0.5px;
  transform: translateX(50%) translateY(50px);
}

#pyramid .mini-graphic .assumptions {
  font-size: 0.7em;
  transform: translateX(50%) translateY(calc(var(--height) - 5px));
}


@media (min-width: 1000px) {
  #pyramid .pyramid-content {
    grid-template-columns: 4fr auto 3fr;
    grid-template-rows: auto 100px auto;
    column-gap: 1em;
    grid-template-areas: 
      "titles titles titles"
      "graphic slider controls"
      "graphic slider data";
  }

  #pyramid .links {
    flex-direction: column;
    row-gap: 1em;
  }

  #pyramid .controls-container .dropdowns {
    all: unset;
    display: flex;
  }

  #pyramid .controls-container .dropdowns,
  #pyramid .controls-container .dropdowns :where(label, label > span, select span::after),
  #pyramid .controls-container .dropdowns span::after {
    all: unset;
  }

  #pyramid .controls-container .dropdowns {
    display: flex;
    column-gap: 2em;
    margin-bottom: 1em;
  }

  #pyramid .controls-container .dropdowns label {
    all: unset;
    display: flex;
    flex-direction: column;
  }

  #pyramid .controls-container .dropdowns label > span {
    margin-bottom: 4px;
  }

  #pyramid :where(.controls-container, .data-container > *) {
    margin-bottom: 1em;
  }
}


@media not (min-width: 1000px) {
  #pyramid .pyramid-content {
    width: 100%;
    max-width: unset;
    padding-bottom: 1em;
    grid-template-columns: 1fr auto;
    column-gap: 2em;
    row-gap: 1em;
    grid-template-areas:
      "controls controls"
      "titles titles"
      "graphic slider"
      "data data";
  }

  #pyramid .slider-container {
    justify-self: right;
  }

  #pyramid .links {
    flex-direction: row;
  }

  #pyramid .links > * {
    flex: 1 1 0;
  }

  #pyramid .data-container {
    padding-top: 2em;
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 2em;
    grid-template-areas: 
      "assumptions table"
      "assumptions dependencies"
      "links links";
  }

  #pyramid .data-container > :first-child {
    grid-area: assumptions;
  }

  #pyramid .data-container > :nth-child(2) {
    grid-area: table;
    margin-bottom: 1em;
  }

  #pyramid .data-container > :nth-child(3) {
    grid-area: dependencies;
    align-self: center;
  }

  #pyramid .links{
    grid-area: links;
    text-align: center;
    padding-top: 1em;
  }
}


@media (max-width: 700px) {
  #pyramid .controls-container {
    flex-direction: column;
  }

  #pyramid .play-pause-container button {
    right: 1%;
  }
}


@media (max-width: 500px) {
  #pyramid .data-container {
    display: flex;
    flex-direction: column;
    padding-top: 1em;
  }

  #pyramid .data-container > :nth-child(3) {
    align-self: unset;
  }

  #pyramid .play-pause-container button {
    transform: translateX(30px);
  }
}


@media (max-width: 400px) {
  #pyramid .links{
    flex-direction: column;
    row-gap: 1em;
  }

  #pyramid .links > * {
    text-align: left;
  }
}